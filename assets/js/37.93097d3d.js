(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{239:function(t,e,a){"use strict";a.r(e);var v=a(0),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"doctype作用？严格模式与混杂模式如何区分？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#doctype作用？严格模式与混杂模式如何区分？"}},[t._v("#")]),t._v(" Doctype作用？严格模式与混杂模式如何区分？")]),t._v(" "),a("h2",{attrs:{id:"一、doctype作用是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、doctype作用是什么？"}},[t._v("#")]),t._v(" 一、Doctype作用是什么？")]),t._v(" "),a("p",[a("code",[t._v("<!DOCTYPE>")]),t._v("声明叫做文件类型定义（DTD），声明的作用为了告诉浏览器该文件的类型。让浏览器解析器知道应该用哪个规范来解析文档。<!DOCTYPE>声明必须在 HTML 文档的第一行，这并不是一个 HTML 标签。")]),t._v(" "),a("h2",{attrs:{id:"二、严格模式与混杂模式如何区分？它们有何意义？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、严格模式与混杂模式如何区分？它们有何意义？"}},[t._v("#")]),t._v(" 二、严格模式与混杂模式如何区分？它们有何意义？")]),t._v(" "),a("p",[t._v("严格模式：又称标准模式，是指浏览器按照 W3C 标准解析代码。")]),t._v(" "),a("p",[t._v("混杂模式：又称怪异模式或兼容模式，是指浏览器用自己的方式解析代码。")]),t._v(" "),a("p",[t._v("如何区分：浏览器解析时到底使用严格模式还是混杂模式，与网页中的 DTD 直接相关。")]),t._v(" "),a("p",[t._v("1、如果文档包含严格的 DOCTYPE ，那么它一般以严格模式呈现。（严格 DTD ——严格模式）")]),t._v(" "),a("p",[t._v("2、包含过渡 DTD 和 URI 的 DOCTYPE ，也以严格模式呈现，但有过渡 DTD 而没有 URI （统一资源标识符，就是声明最后的地址）会导致页面以混杂模式呈现。（有 URI 的过渡 DTD ——严格模式；没有 URI 的过渡 DTD ——混杂模式）")]),t._v(" "),a("p",[t._v("3、DOCTYPE 不存在或形式不正确会导致文档以混杂模式呈现。（DTD不存在或者格式不正确——混杂模式）")]),t._v(" "),a("p",[t._v("4、HTML5 没有 DTD ，因此也就没有严格模式与混杂模式的区别，HTML5 有相对宽松的语法，实现时，已经尽可能大的实现了向后兼容。（ HTML5 没有严格和混杂之分）")]),t._v(" "),a("p",[t._v("意义：严格模式与混杂模式存在的意义与其来源密切相关，如果说只存在严格模式，那么许多旧网站必然受到影响，如果只存在混杂模式，那么会回到当时浏览器大战时的混乱，每个浏览器都有自己的解析模式。")])])}),[],!1,null,null,null);e.default=_.exports}}]);