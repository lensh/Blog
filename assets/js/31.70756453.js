(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{233:function(t,e,i){"use strict";i.r(e);var a=i(0),h=Object(a.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"css盒模型"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#css盒模型"}},[t._v("#")]),t._v(" CSS盒模型")]),t._v(" "),i("h2",{attrs:{id:"一、盒模型分类"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#一、盒模型分类"}},[t._v("#")]),t._v(" 一、盒模型分类")]),t._v(" "),i("h3",{attrs:{id:"标准盒模型"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#标准盒模型"}},[t._v("#")]),t._v(" 标准盒模型")]),t._v(" "),i("p",[t._v("盒子实际内容（content）的width/height=我们设置的width/height;")]),t._v(" "),i("p",[t._v("盒子总宽度/高度=width/height+padding+border+margin。")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://img4.mukewang.com/5b73f51e00015f7905000338.jpg",alt:"image"}})]),t._v(" "),i("h3",{attrs:{id:"ie盒模型"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#ie盒模型"}},[t._v("#")]),t._v(" IE盒模型")]),t._v(" "),i("p",[t._v("浏览器的 width属性不是内容的宽度，而是内容、内边距和边框的宽度的总和；")]),t._v(" "),i("p",[t._v("盒子的（content）宽度+内边距padding+边框border宽度=我们设置的width(height也是如此)")]),t._v(" "),i("p",[t._v("盒子总宽度/高度=width/height + margin；")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://img.mukewang.com/5b73f53f0001a7ec05000334.jpg",alt:"image"}})]),t._v(" "),i("p",[t._v("两者的区别就是width和height的计算方式不一样")]),t._v(" "),i("h2",{attrs:{id:"二、-切换盒模型"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#二、-切换盒模型"}},[t._v("#")]),t._v(" 二、 切换盒模型")]),t._v(" "),i("p",[t._v("box-sizing 属性允许您以特定的方式定义匹配某个区域的特定元素。")]),t._v(" "),i("p",[t._v("box-sizing: content-box;  宽度和高度分别应用到元素的内容框。在宽度和高度之外绘制元素的内边距和边框。")]),t._v(" "),i("p",[t._v("box-sizing: border-box; 为元素设定的宽度和高度决定了元素的边框盒。就是说，为元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。")]),t._v(" "),i("p",[t._v("box-sizing: inherit; 规定应从父元素继承 box-sizing 属性的值。")]),t._v(" "),i("p",[t._v("即box-sizing属性可以指定盒子模型种类，content-box指定盒子模型为W3C（标准盒模型），border-box为IE盒子模型（怪异盒模型）。")]),t._v(" "),i("h2",{attrs:{id:"三、js如何获取和设置盒模型对应的宽和高"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#三、js如何获取和设置盒模型对应的宽和高"}},[t._v("#")]),t._v(" 三、JS如何获取和设置盒模型对应的宽和高")]),t._v(" "),i("p",[t._v("CSS样式有3种：内联样式、内部样式表、外部样式表")]),t._v(" "),i("h4",{attrs:{id:"获取"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#获取"}},[t._v("#")]),t._v(" 获取")]),t._v(" "),i("p",[t._v("1、dom.style.width/height 只能获取内联样式")]),t._v(" "),i("p",[t._v("2、dom.currentStyle.width/height 三种样式都支持，获取的是浏览器渲染后的元素的宽和高（只支持IE浏览器）")]),t._v(" "),i("p",[t._v("3、getComputedStyle(dom).width/height 三种样式都支持，获取的是浏览器渲染后的元素的宽和高（支持主流浏览器）")]),t._v(" "),i("p",[t._v("4、dom.getBoundingClientRect().width/height 三种样式都支持，获取的是浏览器渲染后的元素的宽和高（支持ie和主流浏览器）")]),t._v(" "),i("p",[t._v("getBoundingClientRect返回元素的大小及其相对于视口的左上角位置。")]),t._v(" "),i("p",[t._v("执行 object.getBoundingClientRect() 会得到元素的top、right、bottom、left、width、height属性，这些属性以一个对象的方式返回。")])])}),[],!1,null,null,null);e.default=h.exports}}]);